# Generated by Django 5.1.5 on 2025-02-05 12:46

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Modules',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('module_name', models.CharField(max_length=50, unique=True)),
                ('module_icon', models.TextField()),
                ('is_menu', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('module_url', models.TextField()),
                ('display_order', models.IntegerField(default=0)),
                ('module_description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='UserServices.modules')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('address', models.TextField()),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, choices=[('VN', 'Vietnam'), ('US', 'US'), ('GB', 'GB'), ('FR', 'FR'), ('DE', 'DE'), ('JP', 'JP'), ('KR', 'KR'), ('CN', 'CN'), ('RU', 'RU'), ('BR', 'BR'), ('VN', 'VN')], max_length=50, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pic./')),
                ('account_status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Blocked', 'Blocked')], max_length=50, null=True)),
                ('role', models.CharField(blank=True, choices=[('Admin', 'Admin'), ('User', 'User'), ('Supplier', 'Supplier'), ('Staff', 'Staff'), ('Manager', 'Manager')], max_length=50, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=50)),
                ('social_media_links', models.JSONField(blank=True, null=True)),
                ('addition_details', models.JSONField(blank=True, null=True)),
                ('language', models.CharField(blank=True, choices=[('en', 'English'), ('vi', 'Vietnamese'), ('us', 'English'), ('fr', 'French'), ('es', 'Spanish'), ('de', 'German'), ('zh', 'Chinese'), ('ja', 'Japanese'), ('ko', 'Korean')], max_length=50, null=True)),
                ('departMent', models.CharField(blank=True, choices=[('HR', 'Human Resources'), ('IT', 'Information Technology'), ('FIN', 'Finance'), ('MKT', 'Marketing'), ('SALES', 'Sales'), ('ENG', 'Engineering'), ('SUP', 'Support')], max_length=50, null=True)),
                ('designation', models.CharField(blank=True, choices=[('HR', 'Human Resources'), ('CEO', 'CEO'), ('CSO', 'CSO'), ('CTO', 'CTO'), ('CMO', 'CMO'), ('COD', 'COD'), ('CIO', 'CIO'), ('CISO', 'CEO'), ('CDO', 'CSO'), ('CRO', 'CTO'), ('CSO', 'CMO'), ('CPO', 'COD'), ('CIO', 'CIO')], max_length=50, null=True)),
                ('timezone', models.CharField(blank=True, choices=[('UTC-12:00', 'UTC-12:00'), ('UTC-11:00', 'UTC-11:00'), ('UTC-10:00', 'UTC-10:00'), ('UTC-09:30', 'UTC-09:30'), ('UTC-09:00', 'UTC-09:00'), ('UTC-08:00', 'UTC-08:00'), ('UTC-07:00', 'UTC-07:00'), ('UTC-06:00', 'UTC-06:00'), ('UTC-05:00', 'UTC-05:00'), ('UTC-04:30', 'UTC-04:30'), ('UTC-04:00', 'UTC-04:00'), ('UTC-03:30', 'UTC-03:30'), ('UTC-03:00', 'UTC-03:00'), ('UTC-02:00', 'UTC-02:00'), ('UTC-01:00', 'UTC-01:00'), ('UTC+00:00', 'UTC+00:00'), ('UTC+01:00', 'UTC+01:00'), ('UTC+02:00', 'UTC+02:00'), ('UTC+03:00', 'UTC+03:00'), ('UTC+03:30', 'UTC+03:30'), ('UTC+04:00', 'UTC+04:00'), ('UTC+04:30', 'UTC+04:30'), ('UTC+05:00', 'UTC+05:00'), ('UTC+05:30', 'UTC+05:30'), ('UTC+05:45', 'UTC+05:45'), ('UTC+06:00', 'UTC+06:00'), ('UTC+06:30', 'UTC+06:30'), ('UTC+07:00', 'UTC+07:00'), ('UTC+08:00', 'UTC+08:00'), ('UTC+08:45', 'UTC+08:45'), ('UTC+09:00', 'UTC+09:00'), ('UTC+09:30', 'UTC+09:30'), ('UTC+10:00', 'UTC+10:00'), ('UTC+10:30', 'UTC+10:30'), ('UTC+11:00', 'UTC+11:00'), ('UTC+12:00', 'UTC+12:00'), ('UTC+12:45', 'UTC+12:45'), ('UTC+13:00', 'UTC+13:00'), ('UTC+14:00', 'UTC+14:00')], max_length=50, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('last_device', models.GenericIPAddressField(blank=True, null=True)),
                ('last_ip', models.CharField(blank=True, max_length=255, null=True)),
                ('currency', models.CharField(blank=True, choices=[('USD', 'USD'), ('EUR', 'EUR'), ('JPY', 'JPY'), ('GBP', 'GBP'), ('AUD', 'AUD'), ('CAD', 'CAD'), ('CHF', 'CHF'), ('CNY', 'CNY'), ('HKD', 'HKD'), ('SGD', 'SGD'), ('KRW', 'KRW'), ('INR', 'INR'), ('VND', 'VND'), ('THB', 'THB'), ('MYR', 'MYR'), ('IDR', 'IDR'), ('PHP', 'PHP'), ('NZD', 'NZD'), ('MXN', 'MXN'), ('BRL', 'BRL'), ('ZAR', 'ZAR'), ('RUB', 'RUB'), ('SAR', 'SAR'), ('AED', 'AED'), ('TRY', 'TRY'), ('SEK', 'SEK'), ('NOK', 'NOK'), ('DKK', 'DKK'), ('PLN', 'PLN'), ('HUF', 'HUF'), ('CZK', 'CZK'), ('ILS', 'ILS'), ('ARS', 'ARS'), ('CLP', 'CLP'), ('COP', 'COP'), ('EGP', 'EGP'), ('PKR', 'PKR'), ('BDT', 'BDT'), ('NGN', 'NGN'), ('KES', 'KES')], max_length=50, null=True)),
                ('domain_name', models.CharField(blank=True, max_length=50, null=True)),
                ('plan_type', models.CharField(blank=True, choices=[('free', 'Free'), ('basic', 'Basic'), ('standard', 'Standard'), ('premium', 'Premium'), ('enterprise', 'Enterprise')], max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('domain_user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='domain_user_id_user', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserShippingAddress',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.TextField()),
                ('address_type', models.CharField(choices=[('Home', 'Home'), ('Office', 'Office'), ('Orther', 'Orther')], max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, choices=[('VN', 'Vietnam'), ('US', 'United States'), ('UK', 'United Kingdom'), ('FR', 'France'), ('DE', 'Germany'), ('JP', 'Japan'), ('KR', 'South Korea'), ('CN', 'China'), ('RU', 'Russia'), ('BR', 'Brazil'), ('VN', 'Viet Nam')], max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPermissions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_view', models.BooleanField(default=False)),
                ('is_add', models.BooleanField(default=False)),
                ('is_edit', models.BooleanField(default=False)),
                ('is_delete', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('domain_user_id', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UserServices.modules')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_permissions_1', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('activity', models.TextField()),
                ('activity_type', models.CharField(blank=True, max_length=50, null=True)),
                ('activity_date', models.DateTimeField(auto_now_add=True)),
                ('activity_ip', models.GenericIPAddressField()),
                ('activity_device', models.CharField(max_length=50)),
                ('domain_user_id', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
