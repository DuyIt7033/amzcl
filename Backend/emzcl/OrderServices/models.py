from django.db import models
from UserServices.models import Users

from ProductServices.models import Products

class PurchaseOrder(models.Model):
    id = models.AutoField(primary_key=True)
    warehouse_id = models.ForeignKey('InventoryServices.Warehouse', on_delete=models.CASCADE, blank=True, null=True, related_name='warehouse_id_purchase_order')
    supplier_id = models.ForeignKey(Users, on_delete=models.CASCADE, blank=True, null=True, related_name='supplier_id')
    last_updated_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, blank=True, null=True, related_name='last_updated_by_user_id_purchase_order')
    po_code = models.CharField(max_length=255)
    po_date = models.DateTimeField()
    excepted_delivery_date = models.DateTimeField()
    payment_terms = models.CharField(max_length=255, choices=[('CASH','CASH'),('CREDIT','CREDIT'),('ONLINE','ONLINE'),('CHEQUE','CHEQUE') ],default='CASH')
    payment_status = models.CharField(max_length=255, choices=[('PAID','PAID'),('UNPAID','UNPAID'),('PARTIAL PAID','PARTIAL PAID'),('CANCELLED','CANCELLED')],default='UNPAID')
    total_amount = models.DecimalField(max_digits=10, decimal_places=2)
    paid_amount = models.DecimalField(max_digits=10, decimal_places=2)
    due_amount = models.DecimalField(max_digits=10, decimal_places=2)
    discount_amount = models.DecimalField(max_digits=10, decimal_places=2)
    discount_type = models.CharField(max_length=255, choices=[('PERCENTAGE','PERCENTAGE'),('AMOUNT','AMOUNT')], default='PERCENTAGE')
    shipping_amount = models.DecimalField(max_digits=10, decimal_places=2)
    shipping_type = models.CharField(max_length=255, choices=[('FREE','FREE'),('PAID','PAID')], default='FREE')
    shipping_tax_percentage = models.DecimalField(max_digits=10, decimal_places=2)
    shipping_cancelled_amount = models.DecimalField(max_digits=10, decimal_places=2)
    shipping_cancelled_tax_amount = models.DecimalField(max_digits=10, decimal_places=2)
    additional_details = models.JSONField()
    status = models.CharField(max_length=255, choices=[('DRAFT','DRAFT'),('SENT','SENT'),('RECEIVED','RECEIVED'),('PARTIAL RECEIVED','PARTIAL RECEIVED'),('CANCELLED','CANCELLED'),('RETURNED','RETURNED'),('PARTIAL DELIVERED','PARTIAL DELIVERED')], default='DRAFT')
    create_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='create_by_user_id_purchase_order')
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='domain_user_id_purchase_order')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    approve_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='approve_by_user_id_purchase_order')
    approve_at = models.DateTimeField()
    cancelled_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='cancelled_by_user_id_purchase_order')
    cancelled_at = models.DateTimeField()
    cancelled_reason = models.TextField()
    received_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='received_by_user_id_purchase_order')
    received_at = models.DateTimeField()
    returned_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='returned_by_user_id_purchase_order')
    returned_at = models.DateTimeField()

class PurchaseOrderItems(models.Model):
    id = models.AutoField(primary_key=True)
    po_id = models.ForeignKey('InventoryServices.Warehouse', on_delete=models.CASCADE, blank=True, null=True, related_name='po_id_purchase_order_items')
    product_id = models.ForeignKey('InventoryServices.Warehouse', on_delete=models.CASCADE, blank=True, null=True, related_name='product_id_purchase_order_items')
    quantity_ordered = models.IntegerField()
    quantity_received = models.IntegerField()
    quantity_cancelled = models.IntegerField()
    quantity_returned = models.IntegerField()
    buying_price = models.DecimalField(max_digits=10, decimal_places=2)
    selling_price = models.DecimalField(max_digits=10, decimal_places=2)  
    discount_amount = models.DecimalField(max_digits=10, decimal_places=2)
    amount_paid = models.DecimalField(max_digits=10, decimal_places=2)
    amount_returned = models.DecimalField(max_digits=10, decimal_places=2)
    amount_cancelled =models.DecimalField(max_digits=10, decimal_places=2)
    amount_ordered = models.DecimalField(max_digits=10, decimal_places=2)
    tax_percentage = models.DecimalField(max_digits=10, decimal_places=2)
    tax_amount = models.DecimalField(max_digits=10, decimal_places=2)
    shipping_amount = models.DecimalField(max_digits=10, decimal_places=2)
    shipping_tax_amount = models.DecimalField(max_digits=10, decimal_places=2)
    shipping_cancelled_amount = models.DecimalField(max_digits=10, decimal_places=2)
    shipping_cancelled_tax_amount = models.DecimalField(max_digits=10, decimal_places=2)
    discount_type = models.CharField(max_length=255, choices=[('PERCENTAGE','PERCENTAGE'),('AMOUNT','AMOUNT')], default='PERCENTAGE')
    additional_details = models.JSONField()
    status = models.CharField(max_length=255, choices=[('DRAFT','DRAFT'),('SENT','SENT'),('RECEIVED','RECEIVED'),('PARTIAL RECEIVED','PARTIAL RECEIVED'),('CANCELLED','CANCELLED'),('RETURNED','RETURNED')], default='DRAFT')
    create_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='create_by_user_id_purchase_order_items')
    updated_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, blank=True, null=True, related_name='updated_by_user_id_purchase_order_items')
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='domain_user_id_purchase_order_items')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    approve_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='approve_by_user_id_purchase_order_items')
    approve_at = models.DateTimeField()
    cancelled_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='cancelled_by_user_id_purchase_order_items')
    cancelled_at = models.DateTimeField()
    cancelled_reason = models.TextField()
    received_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='received_by_user_id_purchase_order_items')
    received_at = models.DateTimeField()
    returned_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='returned_by_user_id_purchase_order_items')
    returned_at = models.DateTimeField()

class PurchaseOrderInWardedLog(models.Model):
    id = models.AutoField(primary_key=True)
    po_id = models.ForeignKey(PurchaseOrder, on_delete=models.CASCADE, blank=True, null=True, related_name='po_item_id')
    invoice_path = models.TextField()
    invoice_number = models.CharField(max_length=255)
    notes = models.CharField(max_length=255)
    inwarded_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='inwarded_by_user_id')
    inwarded_at = models.DateTimeField()
    status = models.CharField(max_length=255, choices=[('DRAFT','DRAFT'),('SENT','SENT'),('RECEIVED','RECEIVED'),('PARTIAL RECEIVED','PARTIAL RECEIVED'),('CANCELLED','CANCELLED'),('RETURNED','RETURNED')], default='DRAFT')
    additional_details = models.JSONField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class PurchaseOrderItemInWardedLog(models.Model):
    id = models.AutoField(primary_key=True)
    po_item_id = models.ForeignKey(PurchaseOrder, on_delete=models.CASCADE, blank=True, null=True, related_name='po_item_id_purchase_order_item_inwarded_log')
    quantity = models.IntegerField()
    price = models.DecimalField(max_digits=10, decimal_places=2)
    tax_percentage = models.DecimalField(max_digits=10, decimal_places=2)
    discount_amount = models.DecimalField(max_digits=10, decimal_places=2)
    discount_type = models.CharField(max_length=255, choices=[('PERCENTAGE','PERCENTAGE'),('AMOUNT','AMOUNT')], default='PERCENTAGE')
    shipping_amount = models.DecimalField(max_digits=10, decimal_places=2)
    shipping_tax_percentage = models.DecimalField(max_digits=10, decimal_places=2)
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='domain_user_id_purchase_order_item_inwarded_log')
    status = models.CharField(max_length=255, choices=[('DRAFT','DRAFT'),('SENT','SENT'),('RECEIVED','RECEIVED'),('PARTIAL RECEIVED','PARTIAL RECEIVED'),('CANCELLED','CANCELLED'),('RETURNED','RETURNED')], default='DRAFT')
    additional_details = models.JSONField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    
class PurchaseOrderLogs(models.Model):
    id = models.AutoField(primary_key=True)
    po_id = models.ForeignKey(PurchaseOrder, on_delete=models.CASCADE, blank=True, null=True, related_name='po_item_id_purchase_order_logs')
    comment = models.TextField()
    create_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='create_by_user_id_purchase_order_logs')
    additional_details = models.JSONField()
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='domain_user_id_purchase_order_logs')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class SalesOrder(models.Model):
    id = models.AutoField(primary_key=True)
    customer_id = models.ForeignKey(Users, on_delete=models.CASCADE, blank=True, null=True, related_name='supplier_id_sales_order')
    last_updated_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, blank=True, null=True, related_name='last_updated_by_user_id_sales_order')
    so_code = models.CharField(max_length=255)
    so_date = models.DateTimeField()
    excepted_delivery_date = models.DateTimeField()
    payment_terms = models.CharField(max_length=255, choices=[('CASH','CASH'),('CREDIT','CREDIT'),('ONLINE','ONLINE'),('CHEQUE','CHEQUE') ],default='CASH')
    payment_status = models.CharField(max_length=255, choices=[('PAID','PAID'),('UNPAID','UNPAID'),('PARTIAL PAID','PARTIAL PAID'),('CANCELLED','CANCELLED')],default='UNPAID')
    total_amount = models.DecimalField(max_digits=10, decimal_places=2)
    paid_amount = models.DecimalField(max_digits=10, decimal_places=2)
    due_amount = models.DecimalField(max_digits=10, decimal_places=2)
    discount_amount = models.DecimalField(max_digits=10, decimal_places=2)
    discount_type = models.CharField(max_length=255, choices=[('PERCENTAGE','PERCENTAGE'),('AMOUNT','AMOUNT')], default='PERCENTAGE')
    shipping_amount = models.DecimalField(max_digits=10, decimal_places=2)
    shipping_type = models.CharField(max_length=255, choices=[('FREE','FREE'),('PAID','PAID')], default='FREE')
    shipping_tax_percentage = models.DecimalField(max_digits=10, decimal_places=2)
    shipping_cancelled_amount = models.DecimalField(max_digits=10, decimal_places=2)
    shipping_cancelled_tax_amount = models.DecimalField(max_digits=10, decimal_places=2)
    additional_details = models.JSONField()
    status = models.CharField(max_length=255, choices=[('DRAFT','DRAFT'),('SENT','SENT'),('DELIVERED','DELIVERED'),('PARTIAL DELIVERED','PARTIAL DELIVERED'),('CANCELLED','CANCELLED'),('RETURNED','RETURNED')], default='DRAFT')
    create_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='create_by_user_id_sales_order')
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='domain_user_id_sales_order')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    approve_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='approve_by_user_id_sales_order')
    approve_at = models.DateTimeField()
    cancelled_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='cancelled_by_user_id_sales_order')
    cancelled_at = models.DateTimeField()
    cancelled_reason = models.TextField()
    received_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='received_by_user_id_sales_order')
    received_at = models.DateTimeField()
    returned_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='returned_by_user_id_sales_order')
    returned_at = models.DateTimeField()

class SalesOrderOrderItems(models.Model):
    id = models.AutoField(primary_key=True)
    so_id = models.ForeignKey(SalesOrder, on_delete=models.CASCADE, blank=True, null=True, related_name='so_id_sales_order_order_items')
    product_id = models.ForeignKey('InventoryServices.Warehouse', on_delete=models.CASCADE, blank=True, null=True, related_name='product_id_so_sales_order_order_items')
    quantity_ordered = models.IntegerField()
    quantity_delivered = models.IntegerField()
    quantity_shipped = models.IntegerField()
    quantity_cancelled = models.IntegerField()
    quantity_returned = models.IntegerField()
    purchase_price = models.DecimalField(max_digits=10, decimal_places=2)  
    discount_amount = models.DecimalField(max_digits=10, decimal_places=2)
    amount_paid = models.DecimalField(max_digits=10, decimal_places=2)
    amount_returned = models.DecimalField(max_digits=10, decimal_places=2)
    amount_cancelled =models.DecimalField(max_digits=10, decimal_places=2)
    amount_ordered = models.DecimalField(max_digits=10, decimal_places=2)
    tax_percentage = models.DecimalField(max_digits=10, decimal_places=2)
    tax_amount = models.DecimalField(max_digits=10, decimal_places=2)
    shipping_amount = models.DecimalField(max_digits=10, decimal_places=2)
    shipping_tax_amount = models.DecimalField(max_digits=10, decimal_places=2)
    shipping_cancelled_amount = models.DecimalField(max_digits=10, decimal_places=2)
    shipping_cancelled_tax_amount = models.DecimalField(max_digits=10, decimal_places=2)
    discount_type = models.CharField(max_length=255, choices=[('PERCENTAGE','PERCENTAGE'),('AMOUNT','AMOUNT')], default='PERCENTAGE')
    additional_details = models.JSONField()
    status = models.CharField(max_length=255, choices=[('DRAFT','DRAFT'),('SENT','SENT'),('DELIVERED','DELIVERED'),('PARTIAL DELIVERED','PARTIAL DELIVERED'),('CANCELLED','CANCELLED'),('RETURNED','RETURNED'),('PARTIAL DELIVERED','PARTIAL DELIVERED')], default='DRAFT')
    create_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='create_by_user_id_sales_order_order_items')
    updated_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, blank=True, null=True, related_name='updated_by_user_id_sales_order_order_items')
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='domain_user_id_sales_order_order_items')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    approve_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='approve_by_user_id_sales_order_order_items')
    approve_at = models.DateTimeField()
    cancelled_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='cancelled_by_user_id_sales_order_order_items')
    cancelled_at = models.DateTimeField()
    cancelled_reason = models.TextField()
    shipped_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='received_by_user_id_sales_order_order_items')
    shipped_at = models.DateTimeField()
    returned_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='returned_by_user_id_sales_order_order_items')
    returned_at = models.DateTimeField()

class SalesOrderOutWardedLog(models.Model):
    id = models.AutoField(primary_key=True)
    so_id = models.ForeignKey(SalesOrder, on_delete=models.CASCADE, blank=True, null=True, related_name='so_order_id_SalesOrderOutWardedLog')
    invoice_path = models.TextField()
    invoice_number = models.CharField(max_length=255)
    notes = models.CharField(max_length=255)
    outwarded_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='inwarded_by_user_id_SalesOrderOutWardedLog')
    outwarded_at = models.DateTimeField()
    status = models.CharField(max_length=255, choices=[('DRAFT','DRAFT'),('SENT','SENT'),('DELIVERED','DELIVERED'),('PARTIAL DELIVERED','PARTIAL DELIVERED'),('CANCELLED','CANCELLED'),('RETURNED','RETURNED'),('PARTIAL DELIVERED','PARTIAL DELIVERED')], default='DRAFT')
    additional_details = models.JSONField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class SalesOrderItemOutWardedLog(models.Model):
    id = models.AutoField(primary_key=True)
    so_item_id = models.ForeignKey(SalesOrderOrderItems, on_delete=models.CASCADE, blank=True, null=True, related_name='so_item_id_sales_order_item_out_warded_log')
    outwarded_quantity = models.IntegerField()
    price = models.DecimalField(max_digits=10, decimal_places=2)
    tax_percentage = models.DecimalField(max_digits=10, decimal_places=2)
    discount_amount = models.DecimalField(max_digits=10, decimal_places=2)
    discount_type = models.CharField(max_length=255, choices=[('PERCENTAGE','PERCENTAGE'),('AMOUNT','AMOUNT')], default='PERCENTAGE')
    shipping_amount = models.DecimalField(max_digits=10, decimal_places=2)
    shipping_tax_percentage = models.DecimalField(max_digits=10, decimal_places=2)
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='domain_user_id_sales_order_item_out_warded_log')
    status = models.CharField(max_length=255, choices=[('DRAFT','DRAFT'),('SENT','SENT'),('DELIVERED','DELIVERED'),('PARTIAL DELIVERED','PARTIAL DELIVERED'),('CANCELLED','CANCELLED'),('RETURNED','RETURNED')], default='DRAFT')
    additional_details = models.JSONField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    
class SalesOrderLogs(models.Model):
    id = models.AutoField(primary_key=True)
    so_id = models.ForeignKey(SalesOrder, on_delete=models.CASCADE, blank=True, null=True, related_name='so_item_id_sales_order_logs')
    comment = models.TextField()
    create_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='create_by_user_id_sales_order_logs')
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE,  blank=True, null=True, related_name='domain_user_id_sales_order_logs')
    additional_details = models.JSONField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)